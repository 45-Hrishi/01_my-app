{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","String","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","useState","color","backgroundColor","mode","id","Navbar","href","title","to","home","about","contact","class","name","for","placeholder","onClick","toggleMode","htmlFor","defaultProps","TextForm","Text","setText","heading","value","onChange","event","target","rows","newtext","showAlert","replace","trim","copyText","document","getElementById","select","console","log","navigator","clipboard","writeText","split","length","Math","round","Htmlstyle","propsTypes","PropTypes","string","isRequired","App","setMode","theme","setTheme","showtheme","body","style","borderBottom","setAlert","message","setTimeout","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e33792a2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = String(word).toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    }\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} my-0 alert-dismissible fade show`}role=\"alert\">\r\n                <strong> {capitalize(props.alert.type) + ' :'}  </strong>{props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function About(props) {\r\n\r\n    const [myStyle,setMyStyle] = useState({\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    })\r\n    // const [myText,setMyText] = useState('Light')\r\n    // const toggleStyle = ()=>{\r\n    //     if (myStyle.color === 'white'){\r\n    //         setMyStyle({\r\n    //             color:'black',\r\n    //             backgroundColor :'white'\r\n    //         })\r\n    //         setMyText('Light')\r\n    //     }\r\n    //     else{\r\n    //         setMyStyle({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         setMyText('Dark')\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className=\"container rounded-3 mt-3 border\">\r\n            <h3 className={`text-center my-1 text-${props.mode === 'light'?'dark':'light'}`} >About Us</h3>\r\n            <div className=\"accordion accordion-flush my-2 py-2 border-dark rounded-3\" id=\"accordionFlushExample\" >\r\n                <div className=\"accordion-item alert alert-info my-0 pt-4\">\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                        <button\r\n                            className=\"accordion-button collapsed alert alert-info border-dark rounded-3\" \r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#flush-collapseOne\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"flush-collapseOne\"\r\n                            \r\n                        >\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"flush-collapseOne\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"flush-headingOne\"\r\n                        data-bs-parent=\"#accordionFlushExample\"\r\n                    >\r\n                        <div className=\"accordion-body\" >\r\n                            Placeholder content htmlFor this accordion, which is intended to\r\n                            demonstrate the <code>.accordion-flush</code> className. This is\r\n                            the first item's accordion body.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header alert alert-info my-0 pt-4\" id=\"flush-headingTwo\">\r\n                        <button\r\n                            className=\"accordion-button collapsed alert alert-info my-0 pt-4 border-dark rounded-3\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#flush-collapseTwo\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"flush-collapseTwo\"\r\n                           \r\n                        >\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"flush-collapseTwo\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"flush-headingTwo\"\r\n                        data-bs-parent=\"#accordionFlushExample\"\r\n                    >\r\n                        <div className=\"accordion-body\" >\r\n                            Placeholder content htmlFor this accordion, which is intended to\r\n                            demonstrate the <code>.accordion-flush</code> className. This is\r\n                            the second item's accordion body. Let's imagine this being filled\r\n                            with some actual content.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header alert alert-info my-0 pt-4\" id=\"flush-headingThree\">\r\n                        <button\r\n                            className=\"accordion-button collapsed alert alert-info my-0 pt-4 border-dark rounded-3\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#flush-collapseThree\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"flush-collapseThree\"\r\n                        >\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"flush-collapseThree\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"flush-headingThree\"\r\n                        data-bs-parent=\"#accordionFlushExample\"\r\n                    >\r\n                        <div className=\"accordion-body\" >\r\n                            Placeholder content htmlFor this accordion, which is intended to\r\n                            demonstrate the <code>.accordion-flush</code> className. This is\r\n                            the third item's accordion body. Nothing more exciting happening\r\n                            here in terms of content, but just filling up the space to make it\r\n                            look, at least at first glance, a bit more representative of how\r\n                            this would look in a real-world application.\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BrowserRouter as Router,Link,} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} shadow py-0 pt-0 pb-0 mt-0`}\r\n        id=\"nav\"\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  {props.home}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/about\">\r\n                  {props.about}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"/\">\r\n                  {props.contact}\r\n                </a>\r\n              </li>\r\n              \r\n              <li class=\"nav-item dropdown\">\r\n                <a\r\n                  class=\"nav-link active dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Theme\r\n                </a>\r\n              \r\n            \r\n                <ul class=\"dropdown-menu border-dark rounded-3 \" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a class=\"dropdown-item\" >\r\n                      <div class=\"form-check \">\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"flexRadioDefault\"\r\n                          id=\"flexRadioDefault1\"\r\n                        />\r\n                        <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          Primary\r\n                        </label>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" >\r\n                      <div class=\"form-check\">\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"flexRadioDefault\"\r\n                          id=\"flexRadioDefault1\"\r\n                        />\r\n                        <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          Success\r\n                        </label>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\">\r\n                      <div class=\"form-check\">\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"flexRadioDefault\"\r\n                          id=\"flexRadioDefault1\"\r\n                        />\r\n                        <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          Energetic\r\n                        </label>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" >\r\n                      <div class=\"form-check \">\r\n                        <input\r\n                          class=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"flexRadioDefault\"\r\n                          id=\"flexRadioDefault1\"\r\n                        />\r\n                        <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          Default\r\n                        </label>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n\r\n            <form className=\"d-flex mx-1\">\r\n              <input\r\n                className={`form-control me-2 bg-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button\r\n                className={`btn btn-outline-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                type=\"submit\"\r\n              >\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div\r\n              className=\"form-check form-switch mb-3 mr-4 my-3 py-2\"\r\n              onClick={props.toggleMode}\r\n            >\r\n              <label\r\n                className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                htmlFor=\"flexSwitchCheckChecked\"\r\n              >\r\n                <strong>\r\n                  Enable {props.mode === \"light\" ? \"Dark\" : \"Light\"} Mode\r\n                </strong>\r\n              </label>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckChecked\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// Props\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n  contact: PropTypes.string,\r\n};\r\n\r\n// Default props\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  home: \"Home link\",\r\n  about: \"about link\",\r\n  contact: \"contact link\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n    const [Text, setText] = useState(\"\");\r\n    // // Text = 'Hrishi' //Wrong way to update any const variable or state\r\n    // const [myStyle,setMyStyle] = useState({\r\n    //     color:'white',\r\n    //     backgroundColor:'black'\r\n    // })\r\n    // const [myText,setMyText] = useState('Light')\r\n   \r\n    // const toggleStyle = ()=>{\r\n    //     if (myStyle.color === 'white'){\r\n    //         setMyStyle({\r\n    //             color:'black',\r\n    //             backgroundColor :'white',\r\n               \r\n    //         })\r\n    //         setMyText('Light')\r\n    //     }\r\n    //     else{\r\n    //         setMyStyle({\r\n    //             color:'white',\r\n    //             backgroundColor:'black',\r\n               \r\n    //         })\r\n    //         setMyText('Dark')\r\n    //     }\r\n    // }\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log('Upper one is clicked!!',Text)\r\n        let newtext = Text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert('Text has been converted to Upper Case','info')\r\n    };\r\n\r\n    const handlelowerClick = () => {\r\n        let newtext = Text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert('Text has been converted to Lower Case','info')\r\n\r\n    };\r\n    const handleremovePunctuation = () => {\r\n        let newtext = Text.replace(/[^a-zA-Z ]/g, \"\");\r\n        setText(newtext);\r\n        props.showAlert('Punctuation marks has been deleted from Text','warning')\r\n\r\n    };\r\n    const handleExtraSpace = () => {\r\n        let newtext = Text.replace(/\\s+/g, \" \").trim();\r\n        setText(newtext);\r\n        props.showAlert('Extra space from Text has been removed','info')\r\n\r\n    };\r\n    const handleRemoveText = () =>{\r\n        let newtext = ''\r\n        setText(newtext)\r\n        props.showAlert('Text has been deleted','danger')\r\n\r\n    };\r\n\r\n    const handleCopyClipboard = () =>{\r\n            var copyText = document.getElementById(\"mybox\");\r\n            copyText.select();\r\n            console.log(copyText.value)\r\n            navigator.clipboard.writeText(copyText.value);\r\n            props.showAlert('Text has been copied to','info')\r\n\r\n        }\r\n        \r\n    \r\n    \r\n    const handleOnChange = (event) => {\r\n        // console.log('On Change');\r\n        setText(event.target.value);\r\n    };\r\n    return (\r\n        <div className=\"container rounded-3 border\" >\r\n            <div className=\"row g-3 \">\r\n                <div className=\"col\">\r\n                    <label htmlFor=\"mybox\" className={`text-${props.mode === 'light'?'dark':'light'}`}>{props.heading}</label>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className={`form-control my-1 bg-${props.mode === 'light'?'dark':'light'} text-${props.mode === 'light'?'light':'dark'}` }\r\n                        placeholder=\"Enter Text Here....\"\r\n                        value={Text}\r\n                        onChange={handleOnChange}\r\n                        id=\"mybox\"\r\n                        rows=\"8\"\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-center my-1\">\r\n                <button\r\n                    className=\"btn btn-outline-danger mx-1 my-1\"\r\n                    onClick={handleUpClick}\r\n                >\r\n                    UpperCase\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-info mx-1 my-1\"\r\n                    onClick={handlelowerClick}\r\n                >\r\n                    LowerCase\r\n                </button>\r\n                <button\r\n                    className={`btn btn-outline-${props.mode === 'light'?'secondary':'light'} mx-1 my-1`}\r\n                    onClick={handleremovePunctuation}\r\n                >\r\n                    Remove Punctuations\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-success mx-1 my-1\"\r\n                    onClick={handleExtraSpace}\r\n                >\r\n                    Remove Extra Space\r\n                </button>\r\n\r\n                <button\r\n                     className=\"btn btn-outline-primary mx-1 my-1\"\r\n                     onClick={handleRemoveText}>\r\n                    Clear All Text\r\n                </button>\r\n\r\n                <button\r\n                     className=\"btn btn-outline-warning mx-1 my-1\"\r\n                     onClick={handleCopyClipboard}>\r\n                    Copy To Clipboard\r\n                </button>\r\n            </div>\r\n\r\n            <div className={`container my-2 text-${props.mode == 'light'?'dark':'light'}`}>\r\n                <h4>Your Text Summary</h4>\r\n                <p>\r\n                    Total Words : {Text.split(\" \").length - 1}\r\n                    <br />\r\n                    Total Characters : {Text.length} <br />\r\n                    Read Time : {0.008 * Text.split(\" \").length } Min.<br/>\r\n                    Pages : {Math.round(0.0022 * Text.split(\" \").length,1)}\r\n                </p> \r\n                <div className=\"card\" Htmlstyle=\"width: 18rem;\">\r\n                    <div className={`card-body bg-${props.mode==='light'?'light':'dark'}`}>\r\n                        <p className={`card-title alert alert-${props.mode === 'light' ?'success':'warning'} py-2 my-2 px-0 text-center shadow `}>\r\n                            <strong>Preview </strong>\r\n                        </p>\r\n                        <p className={`card-text text-${props.mode == 'light'?'dark':'light'}`}>{Text.length > 0 ?Text:'Enter Some Text First To Preview Here.'}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//props\r\nTextForm.propsTypes = {\r\n    heading: PropTypes.string.isRequired,\r\n};\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\"\nimport Alert from './components/Alert.js'\nimport About from './components/About';\nimport Navbar from './components/Navbar.js'\nimport TextForm from './components/TextForm.js'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n  Switch\n} from 'react-router-dom';\n\n\nfunction App() {\n\n\n  const [mode, setMode] = useState('light')\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#212520';\n      document.getElementById('nav').style.borderBottom = '1px solid white'\n      showAlert('Dark Mode has been enabled...', 'success')\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.getElementById('nav').style.borderBottom = '1px solid #212520';\n      showAlert('Light Mode has been enabled...', 'success')\n\n    }\n  }\n  /*--------------------------------------------------------------------*/\n  const [theme, setTheme] = useState('default')\n\n  const showtheme = (theme) => {\n    if (theme === 'Primary') {\n      setTheme('primary');\n      document.body.style.backgroundColor = '#0d6efd';\n    }\n    else if (theme === 'Success') {\n      setTheme('Success');\n      document.body.style.backgroundColor = '#0d6efd';\n    }\n    else if (theme === 'Energetic') {\n      setTheme('Danger');\n      document.body.style.backgroundColor = '#0d6efd';\n    }\n    else if (theme === 'Default') {\n      setTheme('Default');\n      document.body.style.backgroundColor = '#212520';\n      document.getElementById('nav').style.borderBottom = '1px solid white'\n      showAlert('Dark Mode has been enabled...', 'success')\n    }\n  }\n  /*--------------------------------------------------------------------*/\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n\n  }\n  /*-------------------------------------------------------------------*/\n  return (\n    <>\n      <Router>\n        <div className=\"container-fluid mx-0 px-0 py-0 my-0\">\n          <Navbar title=\"TextUtils\" home='Home' about=\"About Us\" contact=\"Contact Us\" mode={mode} toggleMode={toggleMode} theme={theme} showtheme={showtheme} />\n          <Alert alert={alert} />\n          <h3 className=\"text-center mt-1 alert alert-warning py-2 mt-3 mx-3\">Welcome To TextUtils</h3>\n          <Routes>\n            <Route path='/' element={<TextForm showAlert={showAlert} showtheme={showtheme} theme={theme} heading='Enter the text to analyze below' mode={mode} />}></Route>\n            <Route path='/about' element={<About mode={mode} />}></Route>\n\n          </Routes>\n\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}